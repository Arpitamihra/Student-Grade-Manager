# -*- coding: utf-8 -*-
"""student_grade_manager.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GqKk7Xffp7sEa_VKIZ-Q5Ag7ZvLWWjXJ
"""

import json
import os

DATA_FILE = "students.json"

## Load existing data or create new
def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as file:
            return json.load(file)
    return []

# Save data to file
def save_data(data):
    with open(DATA_FILE, 'w') as file:
        json.dump(data, file, indent=4)

# Grade calculator
def calculate_grade(average):
    if average >= 90:
        return "A+"
    elif average >= 80:
        return "A"
    elif average >= 70:
        return "B"
    elif average >= 60:
        return "C"
    else:
        return "D"

# Add a student record
def add_student(data):
    name = input("Enter student's name: ")
    marks = []
    for i in range(3):
        mark = float(input(f"Enter mark {i+1}: "))
        marks.append(mark)
    average = sum(marks) / len(marks)
    grade = calculate_grade(average)

    student = {
        "name": name,
        "marks": marks,
        "average": round(average, 2),
        "grade": grade
    }
    data.append(student)
    save_data(data)
    print(f"\n{name}'s record added successfully!")

# Display all records
def display_students(data):
    if not data:
        print("No records found.")
        return
    print("\nAll Student Records:")
    for student in data:
        print(f"\nName: {student['name']}")
        print(f"Marks: {student['marks']}")
        print(f"Average: {student['average']}")
        print(f"Grade: {student['grade']}")

# Search by student name
def search_student(data):
    name = input("Enter the student's name to search: ")
    found = False
    for student in data:
        if student['name'].lower() == name.lower():
            print(f"\nRecord found for {student['name']}:")
            print(f"Marks: {student['marks']}")
            print(f"Average: {student['average']}")
            print(f"Grade: {student['grade']}")
            found = True
            break
    if not found:
        print("Student not found.")

# Main Menu
def main():
    data = load_data()
    while True:
        print("\n--- Student Grade Manager ---")
        print("1. Add Student")
        print("2. View All Students")
        print("3. Search Student")
        print("4. Exit")
        choice = input("Enter your choice (1-4): ")

        if choice == '1':
            add_student(data)
        elif choice == '2':
            display_students(data)
        elif choice == '3':
            search_student(data)
        elif choice == '4':
            print("Exiting... Goodbye!")
            break
        else:
            print("Invalid choice. Try again.")

if __name__ == "__main__":
    main()
